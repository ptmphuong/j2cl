// Generated from "overwrittentypevariables/HashFunctions.java"
package overwrittentypevariables

import javaemul.lang.*
import kotlin.Enum
import kotlin.String
import kotlin.jvm.JvmStatic
import overwrittentypevariables.HashFunction
import overwrittentypevariables.MyFunction

fun interface MyFunction<F, T> {
 fun apply(input: F): T
}

fun interface HashFunction<T>: MyFunction<T, String?> {}

open class HashFunctions {
 companion object {
  @JvmStatic
  fun <T> hashFunction(): HashFunction<T>? {
   return object : HashFunction<T> {
    open override fun apply(input: T): String? {
     return ""
    }
   }
  }

  @JvmStatic
  fun <T: Enum<T>> enumHashFunction(): HashFunction<T>? {
   return object : HashFunction<T> {
    open override fun apply(input: T): String? {
     return "" + input!!.ordinal
    }
   }
  }
 }
}
