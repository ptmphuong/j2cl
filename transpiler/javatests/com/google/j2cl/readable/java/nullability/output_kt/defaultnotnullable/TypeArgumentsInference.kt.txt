// Generated from "nullability/defaultnotnullable/TypeArgumentsInference.java"
package nullability.defaultnotnullable

import javaemul.lang.*
import kotlin.Any
import kotlin.jvm.JvmStatic
import nullability.defaultnotnullable.TypeArgumentsInference

open class TypeArgumentsInference {
 companion object {
  @JvmStatic
  fun <K> wildcardPair(): TypeArgumentsInference.Pair<K, *> {
   return TypeArgumentsInference.Pair<K, Any>()
  }

  @JvmStatic
  fun <K, V> pairIdentity(pair: TypeArgumentsInference.Pair<K, V>): TypeArgumentsInference.Pair<K, V> {
   return pair
  }

  @JvmStatic
  fun <K> wildcardPairAndIdentity(): TypeArgumentsInference.Pair<K, *> {
   return TypeArgumentsInference.pairIdentity<K, Any>(TypeArgumentsInference.wildcardPair<K>() as TypeArgumentsInference.Pair<K, Any>)
  }
 }

 class Pair<K, V> {}
}
