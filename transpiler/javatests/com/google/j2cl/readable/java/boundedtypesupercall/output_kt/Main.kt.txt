// Generated from "boundedtypesupercall/Main.java"
package boundedtypesupercall

import javaemul.lang.*
import kotlin.jvm.*

open class Main {
 abstract class Foo<T> {
  constructor(foo: T)

  abstract fun foo()
 }

 open class Bar<T: kotlin.Comparable<kotlin.Any>?> {
  open fun getSomething(): T {
   return null as T
  }

  open fun doSomething(): boundedtypesupercall.Main.Foo<T>? {
   return object : boundedtypesupercall.Main.Foo<T>(this@Bar.getSomething()) {
    open override fun foo() {}
   }
  }
 }
}
