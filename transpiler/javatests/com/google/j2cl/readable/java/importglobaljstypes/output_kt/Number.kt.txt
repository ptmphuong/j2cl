// Generated from "importglobaljstypes/Number.java"
package importglobaljstypes

import javaemul.lang.*
import importglobaljstypes.Number
import kotlin.Any
import kotlin.Boolean
import kotlin.Double
import kotlin.IntArray
import kotlin.String
import kotlin.jvm.JvmStatic

open class Number {
 open fun testJsDocForLiteralType(a: Number.MyLiteralType?): Number.MyLiteralType? {
  return a
 }

 companion object {
  @JvmStatic
  external fun `fun`(x: Double): Boolean

  @JvmStatic
  fun test(x: Double): Boolean {
   return Number.`fun`(x)
  }

  @JvmStatic
  external fun getFromCharCodeFunction_private_2(): Number.NativeFunction<String?>?

  @JvmStatic
  fun fromCharCode(array: IntArray?): String? {
   return Number.getFromCharCodeFunction_private_2()!!.apply(null, array)
  }
 }

 fun interface NativeFunction<T> {
  fun apply(thisContext: Any?, argsArray: IntArray?): T
 }

 interface MyLiteralType {}
}
