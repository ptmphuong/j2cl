;;; Code for interfacejsbridge.MyJsInterface [static fields]
(global $f_$initialized__interfacejsbridge_MyJsInterface (mut i32) (i32.const 0))

;;; Code for interfacejsbridge.MyInterface [static fields]
(global $f_$initialized__interfacejsbridge_MyInterface (mut i32) (i32.const 0))

;;; Code for interfacejsbridge.SubInterface [static fields]
(global $f_$initialized__interfacejsbridge_SubInterface (mut i32) (i32.const 0))

;;; Code for interfacejsbridge.InterfaceImpl [static fields]
(global $f_$initialized__interfacejsbridge_InterfaceImpl (mut i32) (i32.const 0))

;;; Code for interfacejsbridge.Main [static fields]
(global $f_$initialized__interfacejsbridge_Main (mut i32) (i32.const 0))

;;; Code for interfacejsbridge.InterfaceImpl [vtable.init]
(global $interfacejsbridge.InterfaceImpl.vtable (ref $interfacejsbridge.InterfaceImpl.vtable) 
 (struct.new $interfacejsbridge.InterfaceImpl.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@interfacejsbridge.InterfaceImpl)
  (ref.func $m_foo__int__int@interfacejsbridge.InterfaceImpl)
 )
)

;;; Code for interfacejsbridge.InterfaceImpl [itable.init]
(global $interfacejsbridge.InterfaceImpl.itable (ref $itable) (array.init_static $itable 
 (struct.new $interfacejsbridge.SubInterface.vtable
  (ref.func $m_foo__int__int@interfacejsbridge.InterfaceImpl)
 )
 (struct.new $interfacejsbridge.MyJsInterface.vtable
  (ref.func $m_foo__int__int@interfacejsbridge.InterfaceImpl)
 )
 (struct.new $interfacejsbridge.MyInterface.vtable
  (ref.func $m_foo__int__int@interfacejsbridge.InterfaceImpl)
 )
 ))

;;; Code for interfacejsbridge.Main [vtable.init]
(global $interfacejsbridge.Main.vtable (ref $interfacejsbridge.Main.vtable) 
 (struct.new $interfacejsbridge.Main.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@interfacejsbridge.Main)
  (ref.func $m_test__void@interfacejsbridge.Main)
 )
)

;;; Code for interfacejsbridge.Main [itable.init]
(global $interfacejsbridge.Main.itable (ref $itable) (array.init_static $itable 
 ))

;;; Code for interfacejsbridge.MyJsInterface [INTERFACE]
(type $interfacejsbridge.MyJsInterface.vtable (struct 
 (field $m_foo__int__int (ref $function.m_foo__int__int))
 )
)

;;; void MyJsInterface.$clinit()
(func $$clinit__void@interfacejsbridge.MyJsInterface
 ;;@ interfacejsbridge/InterfaceImpl.java:21:10
 (block
  ;; if (interfacejsbridge.MyJsInterface.$initialized) return;
  ;;@ interfacejsbridge/InterfaceImpl.java:21:10
  (if (global.get $f_$initialized__interfacejsbridge_MyJsInterface)
   (then
    ;; return;
    ;;@ interfacejsbridge/InterfaceImpl.java:21:10
    (return )
   )
  )
  ;; (interfacejsbridge.MyJsInterface.$initialized = true);
  ;;@ interfacejsbridge/InterfaceImpl.java:21:10
  (global.set $f_$initialized__interfacejsbridge_MyJsInterface (i32.const 1))
 )
)

;;; Class<?> MyJsInterface.getClass()
(func $m_getClass__java_lang_Class@interfacejsbridge.MyJsInterface
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getInterfacejsbridge.MyJsInterface();
  (return (call $function.no.side.effects.$getInterfacejsbridge.MyJsInterface__java_lang_Class (ref.func $$getInterfacejsbridge.MyJsInterface__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@interfacejsbridge.MyJsInterface)

;;; Code for interfacejsbridge.MyInterface [INTERFACE]
(type $interfacejsbridge.MyInterface.vtable (struct 
 (field $m_foo__int__int (ref $function.m_foo__int__int))
 )
)

;;; void MyInterface.$clinit()
(func $$clinit__void@interfacejsbridge.MyInterface
 ;;@ interfacejsbridge/InterfaceImpl.java:25:10
 (block
  ;; if (interfacejsbridge.MyInterface.$initialized) return;
  ;;@ interfacejsbridge/InterfaceImpl.java:25:10
  (if (global.get $f_$initialized__interfacejsbridge_MyInterface)
   (then
    ;; return;
    ;;@ interfacejsbridge/InterfaceImpl.java:25:10
    (return )
   )
  )
  ;; (interfacejsbridge.MyInterface.$initialized = true);
  ;;@ interfacejsbridge/InterfaceImpl.java:25:10
  (global.set $f_$initialized__interfacejsbridge_MyInterface (i32.const 1))
 )
)

;;; Class<?> MyInterface.getClass()
(func $m_getClass__java_lang_Class@interfacejsbridge.MyInterface
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getInterfacejsbridge.MyInterface();
  (return (call $function.no.side.effects.$getInterfacejsbridge.MyInterface__java_lang_Class (ref.func $$getInterfacejsbridge.MyInterface__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@interfacejsbridge.MyInterface)

;;; Code for interfacejsbridge.SubInterface [INTERFACE]
(type $interfacejsbridge.SubInterface.vtable (struct 
 (field $m_foo__int__int (ref $function.m_foo__int__int))
 )
)

;;; void SubInterface.$clinit()
(func $$clinit__void@interfacejsbridge.SubInterface
 ;;@ interfacejsbridge/InterfaceImpl.java:29:10
 (block
  ;; if (interfacejsbridge.SubInterface.$initialized) return;
  ;;@ interfacejsbridge/InterfaceImpl.java:29:10
  (if (global.get $f_$initialized__interfacejsbridge_SubInterface)
   (then
    ;; return;
    ;;@ interfacejsbridge/InterfaceImpl.java:29:10
    (return )
   )
  )
  ;; (interfacejsbridge.SubInterface.$initialized = true);
  ;;@ interfacejsbridge/InterfaceImpl.java:29:10
  (global.set $f_$initialized__interfacejsbridge_SubInterface (i32.const 1))
 )
)

;;; Class<?> SubInterface.getClass()
(func $m_getClass__java_lang_Class@interfacejsbridge.SubInterface
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getInterfacejsbridge.SubInterface();
  (return (call $function.no.side.effects.$getInterfacejsbridge.SubInterface__java_lang_Class (ref.func $$getInterfacejsbridge.SubInterface__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@interfacejsbridge.SubInterface)

;;; Code for interfacejsbridge.InterfaceImpl [CLASS]
(type $interfacejsbridge.InterfaceImpl (struct_subtype 
 (field $vtable (ref $interfacejsbridge.InterfaceImpl.vtable)) 
 (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  $java.lang.Object)
)
(type $interfacejsbridge.InterfaceImpl.vtable (struct_subtype 
 (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
 (field $m_hashCode__int (ref $function.m_hashCode__int))
 (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
 (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
 (field $m_foo__int__int (ref $function.m_foo__int__int))
  $java.lang.Object.vtable)
)

;;; InterfaceImpl InterfaceImpl.$create()
(func $$create__@interfacejsbridge.InterfaceImpl
 (result (ref null $interfacejsbridge.InterfaceImpl))
 ;;@ interfacejsbridge/InterfaceImpl.java:34:13
 (local $$instance (ref null $interfacejsbridge.InterfaceImpl))
 (block
  ;; InterfaceImpl $instance = new InterfaceImpl.<init>(0);
  ;;@ interfacejsbridge/InterfaceImpl.java:34:13
  (local.set $$instance (struct.new $interfacejsbridge.InterfaceImpl (ref.as_non_null (global.get $interfacejsbridge.InterfaceImpl.vtable)) (ref.as_non_null (global.get $interfacejsbridge.InterfaceImpl.itable)) (i32.const 0)))
  ;; $instance.$ctor();
  ;;@ interfacejsbridge/InterfaceImpl.java:34:13
  (call $$ctor__void_$p_interfacejsbridge_InterfaceImpl@interfacejsbridge.InterfaceImpl (ref.as_non_null (local.get $$instance)))
  ;; return $instance;
  ;;@ interfacejsbridge/InterfaceImpl.java:34:13
  (return (local.get $$instance))
 )
)

;;; void InterfaceImpl.$ctor()
(func $$ctor__void_$p_interfacejsbridge_InterfaceImpl@interfacejsbridge.InterfaceImpl
 (param $this (ref null $interfacejsbridge.InterfaceImpl))
 ;;@ interfacejsbridge/InterfaceImpl.java:34:13
 (block
  ;; interfacejsbridge.InterfaceImpl.$clinit();
  ;;@ interfacejsbridge/InterfaceImpl.java:34:13
  (call $$clinit__void@interfacejsbridge.InterfaceImpl )
  ;; Object.this.$ctor();
  ;;@ interfacejsbridge/InterfaceImpl.java:34:13
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; int InterfaceImpl.foo(int a)
(func $m_foo__int__int@interfacejsbridge.InterfaceImpl
 (type $function.m_foo__int__int)
 (param $this.untyped (ref $java.lang.Object))
 (param $a i32)
 (result i32)
 ;;@ interfacejsbridge/InterfaceImpl.java:36:13
 (local $this (ref null $interfacejsbridge.InterfaceImpl))
 (local.set $this (ref.cast_static $interfacejsbridge.InterfaceImpl (local.get $this.untyped)))
 (block
  ;; return 0;
  ;;@ interfacejsbridge/InterfaceImpl.java:37:4
  (return (i32.const 0))
 )
)
(elem declare func $m_foo__int__int@interfacejsbridge.InterfaceImpl)

;;; void InterfaceImpl.$clinit()
(func $$clinit__void@interfacejsbridge.InterfaceImpl
 ;;@ interfacejsbridge/InterfaceImpl.java:34:13
 (block
  ;; if (interfacejsbridge.InterfaceImpl.$initialized) return;
  ;;@ interfacejsbridge/InterfaceImpl.java:34:13
  (if (global.get $f_$initialized__interfacejsbridge_InterfaceImpl)
   (then
    ;; return;
    ;;@ interfacejsbridge/InterfaceImpl.java:34:13
    (return )
   )
  )
  ;; (interfacejsbridge.InterfaceImpl.$initialized = true);
  ;;@ interfacejsbridge/InterfaceImpl.java:34:13
  (global.set $f_$initialized__interfacejsbridge_InterfaceImpl (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ interfacejsbridge/InterfaceImpl.java:34:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> InterfaceImpl.getClass()
(func $m_getClass__java_lang_Class@interfacejsbridge.InterfaceImpl
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $interfacejsbridge.InterfaceImpl))
 (local.set $this (ref.cast_static $interfacejsbridge.InterfaceImpl (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getInterfacejsbridge.InterfaceImpl();
  (return (call $function.no.side.effects.$getInterfacejsbridge.InterfaceImpl__java_lang_Class (ref.func $$getInterfacejsbridge.InterfaceImpl__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@interfacejsbridge.InterfaceImpl)

;;; Code for interfacejsbridge.Main [CLASS]
(type $interfacejsbridge.Main (struct_subtype 
 (field $vtable (ref $interfacejsbridge.Main.vtable)) 
 (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  $java.lang.Object)
)
(type $interfacejsbridge.Main.vtable (struct_subtype 
 (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
 (field $m_hashCode__int (ref $function.m_hashCode__int))
 (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
 (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
 (field $m_test__void (ref $function.m_test__void))
  $java.lang.Object.vtable)
)

;;; Main Main.$create()
(func $$create__@interfacejsbridge.Main
 (result (ref null $interfacejsbridge.Main))
 ;;@ interfacejsbridge/Main.java:18:13
 (local $$instance (ref null $interfacejsbridge.Main))
 (block
  ;; Main $instance = new Main.<init>(0);
  ;;@ interfacejsbridge/Main.java:18:13
  (local.set $$instance (struct.new $interfacejsbridge.Main (ref.as_non_null (global.get $interfacejsbridge.Main.vtable)) (ref.as_non_null (global.get $interfacejsbridge.Main.itable)) (i32.const 0)))
  ;; $instance.$ctor();
  ;;@ interfacejsbridge/Main.java:18:13
  (call $$ctor__void_$p_interfacejsbridge_Main@interfacejsbridge.Main (ref.as_non_null (local.get $$instance)))
  ;; return $instance;
  ;;@ interfacejsbridge/Main.java:18:13
  (return (local.get $$instance))
 )
)

;;; void Main.$ctor()
(func $$ctor__void_$p_interfacejsbridge_Main@interfacejsbridge.Main
 (param $this (ref null $interfacejsbridge.Main))
 ;;@ interfacejsbridge/Main.java:18:13
 (block
  ;; interfacejsbridge.Main.$clinit();
  ;;@ interfacejsbridge/Main.java:18:13
  (call $$clinit__void@interfacejsbridge.Main )
  ;; Object.this.$ctor();
  ;;@ interfacejsbridge/Main.java:18:13
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; void Main.test()
(func $m_test__void@interfacejsbridge.Main
 (type $function.m_test__void)
 (param $this.untyped (ref $java.lang.Object))
 ;;@ interfacejsbridge/Main.java:19:14
 (local $a (ref null $java.lang.Object))
 (local $b (ref null $java.lang.Object))
 (local $c (ref null $java.lang.Object))
 (local $d (ref null $interfacejsbridge.InterfaceImpl))
 (local $this (ref null $interfacejsbridge.Main))
 (local.set $this (ref.cast_static $interfacejsbridge.Main (local.get $this.untyped)))
 (block
  ;; MyJsInterface a = interfacejsbridge.InterfaceImpl.$create();
  ;;@ interfacejsbridge/Main.java:20:4
  (local.set $a (call $$create__@interfacejsbridge.InterfaceImpl ))
  ;; MyInterface b = interfacejsbridge.InterfaceImpl.$create();
  ;;@ interfacejsbridge/Main.java:21:4
  (local.set $b (call $$create__@interfacejsbridge.InterfaceImpl ))
  ;; SubInterface c = interfacejsbridge.InterfaceImpl.$create();
  ;;@ interfacejsbridge/Main.java:22:4
  (local.set $c (call $$create__@interfacejsbridge.InterfaceImpl ))
  ;; InterfaceImpl d = interfacejsbridge.InterfaceImpl.$create();
  ;;@ interfacejsbridge/Main.java:23:4
  (local.set $d (call $$create__@interfacejsbridge.InterfaceImpl ))
  ;; a.foo(1);
  ;;@ interfacejsbridge/Main.java:24:4
  (drop (call_ref $function.m_foo__int__int (ref.as_non_null (local.get $a))(i32.const 1)(struct.get $interfacejsbridge.MyJsInterface.vtable $m_foo__int__int (ref.cast_static $interfacejsbridge.MyJsInterface.vtable (array.get $itable (struct.get $java.lang.Object $itable (local.get $a)) (i32.const 1))) )))
  ;; b.foo(1);
  ;;@ interfacejsbridge/Main.java:25:4
  (drop (call_ref $function.m_foo__int__int (ref.as_non_null (local.get $b))(i32.const 1)(struct.get $interfacejsbridge.MyInterface.vtable $m_foo__int__int (ref.cast_static $interfacejsbridge.MyInterface.vtable (array.get $itable (struct.get $java.lang.Object $itable (local.get $b)) (i32.const 2))) )))
  ;; c.foo(1);
  ;;@ interfacejsbridge/Main.java:26:4
  (drop (call_ref $function.m_foo__int__int (ref.as_non_null (local.get $c))(i32.const 1)(struct.get $interfacejsbridge.SubInterface.vtable $m_foo__int__int (ref.cast_static $interfacejsbridge.SubInterface.vtable (array.get $itable (struct.get $java.lang.Object $itable (local.get $c)) (i32.const 0))) )))
  ;; d.foo(1);
  ;;@ interfacejsbridge/Main.java:27:4
  (drop (call_ref $function.m_foo__int__int (ref.as_non_null (local.get $d))(i32.const 1)(struct.get $interfacejsbridge.InterfaceImpl.vtable $m_foo__int__int (struct.get $interfacejsbridge.InterfaceImpl $vtable(local.get $d)))))
 )
)
(elem declare func $m_test__void@interfacejsbridge.Main)

;;; void Main.$clinit()
(func $$clinit__void@interfacejsbridge.Main
 ;;@ interfacejsbridge/Main.java:18:13
 (block
  ;; if (interfacejsbridge.Main.$initialized) return;
  ;;@ interfacejsbridge/Main.java:18:13
  (if (global.get $f_$initialized__interfacejsbridge_Main)
   (then
    ;; return;
    ;;@ interfacejsbridge/Main.java:18:13
    (return )
   )
  )
  ;; (interfacejsbridge.Main.$initialized = true);
  ;;@ interfacejsbridge/Main.java:18:13
  (global.set $f_$initialized__interfacejsbridge_Main (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ interfacejsbridge/Main.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Main.getClass()
(func $m_getClass__java_lang_Class@interfacejsbridge.Main
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $interfacejsbridge.Main))
 (local.set $this (ref.cast_static $interfacejsbridge.Main (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getInterfacejsbridge.Main();
  (return (call $function.no.side.effects.$getInterfacejsbridge.Main__java_lang_Class (ref.func $$getInterfacejsbridge.Main__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@interfacejsbridge.Main)
