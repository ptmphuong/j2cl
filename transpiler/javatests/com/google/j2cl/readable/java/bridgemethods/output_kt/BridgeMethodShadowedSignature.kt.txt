// Generated from "bridgemethods/BridgeMethodShadowedSignature.java"
package bridgemethods

import javaemul.lang.*
import bridgemethods.BridgeMethodShadowedSignature
import java.util.function.Consumer
import kotlin.String

open class BridgeMethodShadowedSignature {
 fun interface I<I1> {
  fun get(consumer: Consumer<in I1>?): String?
 }

 abstract class B<B1, B2>: BridgeMethodShadowedSignature.I<B1> {
  open fun get(consumer: B2): String? {
   return "B get B2"
  }
 }

 open class C<C1>: BridgeMethodShadowedSignature.I<C1>, BridgeMethodShadowedSignature.B<C1, Consumer<in C1>?>() {}
}
