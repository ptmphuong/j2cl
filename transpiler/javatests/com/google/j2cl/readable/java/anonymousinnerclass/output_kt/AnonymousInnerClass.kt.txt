// Generated from "anonymousinnerclass/AnonymousInnerClass.java"
package anonymousinnerclass

import javaemul.lang.*
import anonymousinnerclass.A
import anonymousinnerclass.AnonymousInnerClass
import kotlin.Int
import kotlin.jvm.JvmField

open class A {
 open inner class B {}
}

open class AnonymousInnerClass {
 open fun test(arg: Int) {
  val ic: AnonymousInnerClass.InnerClass? = object : InnerClass() {}
  val a: A? = A()
  val b: A.B? = object : B() {}
  open class ___1C {
   @JvmField var fInC: Int = arg
  }
  val c: ___1C? = object : ___1C() {}
 }

 open inner class InnerClass {}
}
