// Generated from "simplebridgemethods/SimpleBridgeMethods.java"
package simplebridgemethods

import javaemul.lang.*
import kotlin.AssertionError
import kotlin.Error
import simplebridgemethods.Callable
import simplebridgemethods.Superclass

open class Superclass<T: Error?> {
 open fun m1(t: T) {}
}

open class Subclass: Superclass<AssertionError?>() {
 open override fun m1(a: AssertionError?) {}
}

open class AnotherSubclass: Superclass<AssertionError?>() {}

fun interface Callable<V> {
 fun call(v: V)
}

open class Task<T>: Callable<T> {
 open override fun call(t: T) {}
}

open class AnotherTask<T: AssertionError?>: Callable<Superclass<T>?> {
 open override fun call(t: Superclass<T>?) {}
}

open class SimpleBridgeMethods {}
