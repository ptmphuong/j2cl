;;; Code for functiontype.Function [static fields]
(global $f_$initialized__functiontype_Function (mut i32) (i32.const 0))

;;; Code for functiontype.FunctionImpl [static fields]
(global $f_$initialized__functiontype_FunctionImpl (mut i32) (i32.const 0))

;;; Code for functiontype.FunctionImpl [vtable.init]
(global $functiontype.FunctionImpl.vtable (ref $functiontype.FunctionImpl.vtable) 
 (struct.new $functiontype.FunctionImpl.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@functiontype.FunctionImpl)
  (ref.func $m_test__functiontype_Function__void@functiontype.FunctionImpl)
 )
)

;;; Code for functiontype.FunctionImpl [itable.init]
(global $functiontype.FunctionImpl.itable (ref $itable) (array.init_static $itable 
 (struct.new $functiontype.Function.vtable
 )
 ))

;;; Code for functiontype.Function [INTERFACE]
(type $functiontype.Function.vtable (struct 
 )
)

;;; void Function.$clinit()
(func $$clinit__void@functiontype.Function
 ;;@ functiontype/FunctionImpl.java:18:10
 (block
  ;; if (functiontype.Function.$initialized) return;
  ;;@ functiontype/FunctionImpl.java:18:10
  (if (global.get $f_$initialized__functiontype_Function)
   (then
    ;; return;
    ;;@ functiontype/FunctionImpl.java:18:10
    (return )
   )
  )
  ;; (functiontype.Function.$initialized = true);
  ;;@ functiontype/FunctionImpl.java:18:10
  (global.set $f_$initialized__functiontype_Function (i32.const 1))
 )
)

;;; Class<?> Function.getClass()
(func $m_getClass__java_lang_Class@functiontype.Function
 (param $this (ref null $java.lang.Object))
 (result (ref null $java.lang.Class))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getFunctiontype.Function();
  (return (call $function.no.side.effects.$getFunctiontype.Function__java_lang_Class (ref.func $$getFunctiontype.Function__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@functiontype.Function)

;;; Code for functiontype.FunctionImpl [CLASS]
(type $functiontype.FunctionImpl (struct_subtype 
 (field $vtable (ref $functiontype.FunctionImpl.vtable)) 
 (field $itable (ref $itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  $java.lang.Object)
)
(type $functiontype.FunctionImpl.vtable (struct_subtype 
 (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
 (field $m_hashCode__int (ref $function.m_hashCode__int))
 (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
 (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
 (field $m_test__functiontype_Function__void (ref $function.m_test__functiontype_Function__void))
  $java.lang.Object.vtable)
)

;;; FunctionImpl FunctionImpl.$create()
(func $$create__@functiontype.FunctionImpl
 (result (ref null $functiontype.FunctionImpl))
 ;;@ functiontype/FunctionImpl.java:20:13
 (local $$instance (ref null $functiontype.FunctionImpl))
 (block
  ;; FunctionImpl $instance = new FunctionImpl.<init>(0);
  ;;@ functiontype/FunctionImpl.java:20:13
  (local.set $$instance (struct.new $functiontype.FunctionImpl (ref.as_non_null (global.get $functiontype.FunctionImpl.vtable)) (ref.as_non_null (global.get $functiontype.FunctionImpl.itable)) (i32.const 0)))
  ;; $instance.$ctor();
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$ctor__void_$p_functiontype_FunctionImpl@functiontype.FunctionImpl (ref.as_non_null (local.get $$instance)))
  ;; return $instance;
  ;;@ functiontype/FunctionImpl.java:20:13
  (return (local.get $$instance))
 )
)

;;; void FunctionImpl.$ctor()
(func $$ctor__void_$p_functiontype_FunctionImpl@functiontype.FunctionImpl
 (param $this (ref null $functiontype.FunctionImpl))
 ;;@ functiontype/FunctionImpl.java:20:13
 (block
  ;; functiontype.FunctionImpl.$clinit();
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$clinit__void@functiontype.FunctionImpl )
  ;; Object.this.$ctor();
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; void FunctionImpl.test(Function f)
(func $m_test__functiontype_Function__void@functiontype.FunctionImpl
 (type $function.m_test__functiontype_Function__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $f (ref null $java.lang.Object))
 ;;@ functiontype/FunctionImpl.java:21:14
 (local $this (ref null $functiontype.FunctionImpl))
 (local.set $this (ref.cast_static $functiontype.FunctionImpl (local.get $this.untyped)))
 (block
 )
)
(elem declare func $m_test__functiontype_Function__void@functiontype.FunctionImpl)

;;; void FunctionImpl.$clinit()
(func $$clinit__void@functiontype.FunctionImpl
 ;;@ functiontype/FunctionImpl.java:20:13
 (block
  ;; if (functiontype.FunctionImpl.$initialized) return;
  ;;@ functiontype/FunctionImpl.java:20:13
  (if (global.get $f_$initialized__functiontype_FunctionImpl)
   (then
    ;; return;
    ;;@ functiontype/FunctionImpl.java:20:13
    (return )
   )
  )
  ;; (functiontype.FunctionImpl.$initialized = true);
  ;;@ functiontype/FunctionImpl.java:20:13
  (global.set $f_$initialized__functiontype_FunctionImpl (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ functiontype/FunctionImpl.java:20:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> FunctionImpl.getClass()
(func $m_getClass__java_lang_Class@functiontype.FunctionImpl
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $functiontype.FunctionImpl))
 (local.set $this (ref.cast_static $functiontype.FunctionImpl (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getFunctiontype.FunctionImpl();
  (return (call $function.no.side.effects.$getFunctiontype.FunctionImpl__java_lang_Class (ref.func $$getFunctiontype.FunctionImpl__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@functiontype.FunctionImpl)
