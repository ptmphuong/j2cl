// Generated from "genericequals/GenericEquals.java"
package genericequals

import javaemul.lang.*
import genericequals.GenericEquals
import kotlin.Any
import kotlin.Boolean
import kotlin.jvm.JvmField

open class GenericEquals<T> {
 @JvmField val value_private_2: T

 @JvmField val value2_private_2: GenericEquals<T>?

 constructor(value: T) {
  this.value_private_2 = value
  this.value2_private_2 = null
 }

 open fun foo(other: GenericEquals<*>?): Any? {
  return other!!.value2_private_2!!.value_private_2
 }

 open override fun equals(obj: Any?): Boolean {
  if (obj === this) {
   return true
  }
  if (!(obj is GenericEquals<*>)) {
   return false
  }
  val other: GenericEquals<*>? = obj as GenericEquals<*>?
  return this.value_private_2!!.equals(other!!.value_private_2)
 }
}
